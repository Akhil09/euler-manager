---
:id: 414
:name: Kaprekar constant
:url: http://projecteuler.net/problem=414
:content: "\r\n<p>\r\n6174 is a remarkable number; if we sort its digits in increasing
  order and subtract that number from the number you get when you sort the digits
  in decreasing order, we get 7641-1467=6174.<br>\r\nEven more remarkable is that
  if we start from any 4 digit number and repeat this process of sorting and subtracting,
  we'll eventually end up with 6174 or immediately with 0 if all digits are equal.<br>
  \r\nThis also works with numbers that have less than 4 digits if we pad the number
  with leading zeroes until we have 4 digits.<br>\r\nE.g. let's start with the number
  0837:<br>\r\n8730-0378=8352<br>\r\n8532-2358=6174\r\n</p>\r\n<p>\r\n6174 is called
  the <b>Kaprekar constant</b>. The process of sorting and subtracting and repeating
  this until either 0 or the Kaprekar constant is reached is called the <b>Kaprekar
  routine</b>.\r\n</p>\r\n<p>\r\nWe can consider the Kaprekar routine for other bases
  and number of digits.<br> \r\nUnfortunately, it is not guaranteed a Kaprekar constant
  exists in all cases; either the routine can end up in a cycle for some input numbers
  or the constant the routine arrives at can be different for different input numbers.<br>\r\nHowever,
  it can be shown that for 5 digits and a base b = 6t+3<img src=\"images/symbol_ne.gif\"
  width=\"11\" height=\"10\" alt=\"≠\" border=\"0\" style=\"vertical-align:middle;\">9,
  a Kaprekar constant exists.<br>\r\nE.g. base 15: (10,4,14,9,5)<sub>15</sub><br>\r\nbase
  21: (14,6,20,13,7)<sub>21</sub></p>\r\n<p>\r\nDefine <var>C<sub>b</sub></var> to
  be the Kaprekar constant in base <var>b</var> for 5 digits.\r\nDefine the function
  <var>sb(i)</var> to be\r\n</p>\n<ul>\n<li> 0 if i = <var>C<sub>b</sub></var> or
  if <var>i</var> written in base <var>b</var> consists of 5 identical digits\r\n</li>\n<li>
  the number of iterations it takes the Kaprekar routine in base <var>b</var> to arrive
  at <var>C<sub>b</sub></var>, otherwise\r\n</li>\n</ul>\r\nNote that we can define
  <var>sb(i)</var> for all integers <var>i</var> <img src=\"images/symbol_lt.gif\"
  width=\"10\" height=\"10\" alt=\"&lt;\" border=\"0\" style=\"vertical-align:middle;\"><var>b</var><sup>5</sup>.
  If <var>i</var> written in base <var>b</var> takes less than 5 digits, the number
  is padded with leading zero digits until we have 5 digits before applying the Kaprekar
  routine.\r\n\r\n<p>\r\nDefine <var>S(b)</var> as the sum of <var>sb(i)</var> for
  0 <img src=\"images/symbol_lt.gif\" width=\"10\" height=\"10\" alt=\"&lt;\" border=\"0\"
  style=\"vertical-align:middle;\"><var>i</var> <img src=\"images/symbol_lt.gif\"
  width=\"10\" height=\"10\" alt=\"&lt;\" border=\"0\" style=\"vertical-align:middle;\"><var>b</var><sup>5</sup>.<br>\r\nE.g.
  S(15) = 5274369<br> \r\nS(111) = 400668930299\r\n</p>\r\n<p>\r\nFind the sum of
  S(6k+3) for 2 <img src=\"images/symbol_le.gif\" width=\"10\" height=\"12\" alt=\"≤\"
  border=\"0\" style=\"vertical-align:middle;\"> k <img src=\"images/symbol_le.gif\"
  width=\"10\" height=\"12\" alt=\"≤\" border=\"0\" style=\"vertical-align:middle;\">
  300.<br>\r\nGive the last 18 digits as your answer.\r\n</p>\r\n\r\n"
