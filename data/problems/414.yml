---
:id: 414
:name: Kaprekar constant
:url: http://projecteuler.net/problem=414
:content: "6174 is a remarkable number; if we sort its digits in increasing order
  and subtract that number from the number you get when you sort the digits in decreasing
  order, we get 7641-1467=6174.  \n\rEven more remarkable is that if we start from
  any 4 digit number and repeat this process of sorting and subtracting, we'll eventually
  end up with 6174 or immediately with 0 if all digits are equal.  \n \rThis also
  works with numbers that have less than 4 digits if we pad the number with leading
  zeroes until we have 4 digits.  \n\rE.g. let's start with the number 0837:  \n\r8730-0378=8352
  \ \n\r8532-2358=6174\n\n6174 is called the **Kaprekar constant** . The process of
  sorting and subtracting and repeating this until either 0 or the Kaprekar constant
  is reached is called the **Kaprekar routine** .\n\nWe can consider the Kaprekar
  routine for other bases and number of digits.  \n \rUnfortunately, it is not guaranteed
  a Kaprekar constant exists in all cases; either the routine can end up in a cycle
  for some input numbers or the constant the routine arrives at can be different for
  different input numbers.  \n\rHowever, it can be shown that for 5 digits and a base
  b = 6t+3 ![≠]({{ images_dir }}/symbol_ne.gif)9, a Kaprekar constant exists.  \n\rE.g.
  base 15: (10,4,14,9,5)<sub>15</sub>  \n\rbase 21: (14,6,20,13,7)<sub>21</sub>\n\nDefine
  <var>C<sub>b</sub></var> to be the Kaprekar constant in base <var>b</var> for 5
  digits.\rDefine the function <var>sb(i)</var> to be\n\n- 0 if i = <var>C<sub>b</sub></var>
  or if <var>i</var> written in base <var>b</var> consists of 5 identical digits\r\n-
  the number of iterations it takes the Kaprekar routine in base <var>b</var> to arrive
  at <var>C<sub>b</sub></var>, otherwise\r\n\rNote that we can define <var>sb(i)</var>
  for all integers <var>i</var> ![<]({{ images_dir }}/symbol_lt.gif) <var>b</var><sup>5</sup>.
  If <var>i</var> written in base <var>b</var> takes less than 5 digits, the number
  is padded with leading zero digits until we have 5 digits before applying the Kaprekar
  routine.\r\r\n\nDefine <var>S(b)</var> as the sum of <var>sb(i)</var> for 0 ![<]({{
  images_dir }}/symbol_lt.gif) <var>i</var> ![<]({{ images_dir }}/symbol_lt.gif) <var>b</var><sup>5</sup>.
  \ \n\rE.g. S(15) = 5274369  \n \rS(111) = 400668930299\n\nFind the sum of S(6k+3)
  for 2 ![≤]({{ images_dir }}/symbol_le.gif) k ![≤]({{ images_dir }}/symbol_le.gif)
  300.  \n\rGive the last 18 digits as your answer.\n\n"
