#!/usr/bin/env ruby

require 'rubygems'

require 'commander/import'
require 'colorize'

require_relative '../lib/euler'

program :version, Euler::VERSION
program :description, 'Project Euler solution manager.'

command :run do |c|
  c.syntax = 'euler run problem_id language'
  c.summary = 'Runs a solution.'
  c.description = c.summary
  c.example 'Runs the ruby solution for problem #1', 'euler run 1 ruby'
  c.action do |args, options|
    problem_id = args.shift
    language   = args.shift
    solution   = Euler::Solution.new(problem_id, language)

    puts
    puts solution.run
    puts
  end
end

command :test do |c|
  c.syntax = 'euler test problem_id language'
  c.summary = 'Tests a solution.'
  c.description = c.summary
  c.example 'Tests the ruby solution for problem #1', 'euler test 1 ruby'
  c.action do |args, options|
    problem_id = args.shift
    language   = args.shift
    solution   = Euler::Solution.new(problem_id, language)
    correct = solution.correct?

    puts
    puts "Testing #{solution.language} solution to"
    puts "##{problem.id} - #{problem.name}".bold
    puts
    puts "Expected: " + problem.answer.cyan
    puts "Result:   " + solution.result.cyan
    puts

    if solution.correct?
      puts "                         PASS                         ".bold.on_green
    else
      puts "                         FAIL                         ".bold.on_red
    end
  end
end

command :new do |c|
  c.action do |args, options|
    problem_id = args.shift
    language   = args.shift

    solution = Euler::Solution.new(problem_id, language)
    problem  = solution.problem

    solution.init

    puts
    puts "Done initializing empty #{solution.language} solution for"
    puts "##{problem.id} - #{problem.name}".bold
    puts
  end
end

command :describe do |c|

end
